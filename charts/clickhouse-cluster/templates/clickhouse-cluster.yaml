apiVersion: "clickhouse.altinity.com/v1"
kind: "ClickHouseInstallation"
metadata:
  name:    {{ .Release.Name }} #clickhouse
  namespace:   {{ .Release.Namespace }} # alt-clickhouse  
spec:
  defaults:
    templates:
      dataVolumeClaimTemplate: data-volume-template
      serviceTemplate: service-template
      podTemplate: pod-template-resource-limit
  configuration:
    zookeeper:
      nodes:
      - host: {{ .Values.zkhost }}
    profiles:
      readonly/readonly: {{ .Values.configpro.readonly }}
      default/max_memory_usage: {{ .Values.configpro.maxmemory }}
    users:
      admin/password: {{ .Values.adminpassword }}
      admin/networks/ip: 
        - {{ .Values.allowedip }}
    clusters:
      - name: clickhouse
        layout:
          shardsCount: {{ .Values.clusters.shardsCount }}
          replicasCount: {{ .Values.clusters.replicasCount }}
  templates:
    podTemplates:
      - name: pod-template-resource-limit
        spec:
          containers:
          - name: clickhouse
            image: docker.io/clickhouse/clickhouse-server:latest 
            imagePullPolicy: IfNotPresent
            resources:
              requests:
                memory: {{ .Values.podtemplate.requestsmem |quote }}
                cpu: {{ .Values.podtemplate.requestscpu | quote }}
              limits:
                memory: {{ .Values.podtemplate.limitsmem | quote }}
                cpu:  {{ .Values.podtemplate.limitscpu | quote }}
        podDistribution:
          - type: ShardAntiAffinity
            topologyKey: "tiexiang.io/host-name"
          - type: ReplicaAntiAffinity
            topologyKey: "tiexiang.io/host-name"
          - type: MaxNumberPerNode
            number: {{ .Values.podDistribution.number }}
            topologyKey: "tiexiang.io/host-name"
    serviceTemplates:
    - name: service-template
      generateName: "service-{chi}"
      spec:
        ports:
        - name: http
          port: 8123
        - name: tcp
          port: 9000
        type: NodePort
    volumeClaimTemplates:
    - name: data-volume-template
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.volumeClaimTemplates.storage }}
