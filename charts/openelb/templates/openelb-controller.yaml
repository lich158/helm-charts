apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "openelb.fullname" . }}-controller
  namespace: {{ template "openelb.namespace" . }}
  labels:
    app: openelb
    component: controller
    {{- include "openelb.controller.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app: openelb
      component: controller
      {{- include "openelb.controller.labels" . | nindent 6 }}
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: openelb
        component: controller
        {{- include "openelb.controller.labels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ template "openelb.controller.serviceAccountName" . }}
      affinity: {{- toYaml .Values.controller.affinity | nindent 8 }}
      tolerations: {{- toYaml .Values.controller.tolerations | nindent 8 }}
      nodeSelector: {{- toYaml .Values.controller.nodeSelector | nindent 8 }}
      containers:
        - command:
            - openelb-controller
          args:
            {{ if .Values.controller.monitorEnable }}
            {{- $metricsAddr := cat ":" .Values.controller.monitorPort |toString -}}
            - --metrics-addr={{- nospace $metricsAddr -}}
            {{ end }}
            - --webhook-port={{ .Values.controller.webhookPort }}
            - --leader-elect
          image: {{ template "controller.image" . }}
          imagePullPolicy: {{ .Values.controller.image.pullPolicy }}
          name: openelb-controller
          env:
            - name: OPENELB_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          ports:
            - containerPort: {{ .Values.controller.webhookPort }}
              name: webhook
              protocol: TCP
          resources: {{- toYaml .Values.controller.resources | nindent 12 }}
          volumeMounts:
            - name: webhook-cert
              mountPath: /tmp/k8s-webhook-server/serving-certs/
              readOnly: true
      terminationGracePeriodSeconds: 10
      volumes:
        - name: webhook-cert
          secret:
            secretName: {{ template "openelb.admission.fullname" . }}
            items:
              - key: key
                path: tls.key
              - key: cert
                path: tls.crt

---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "openelb.controller.fullname" . }}
  labels:
    app: openelb
    component: controller
    {{- include "openelb.controller.labels" . | nindent 4 }}
  namespace: {{ template "openelb.namespace" . }}
spec:
  selector:
    app: openelb
    component: controller
    {{- include "openelb.controller.labels" . | nindent 4 }}
  ports:
    - name: https-webhook
      port: 443
      targetPort: webhook
      {{ if .Values.controller.monitorEnable }}
    - port: {{ .Values.controller.monitorPort }}
      name: metrics
      {{ end }}
  type: ClusterIP
  
