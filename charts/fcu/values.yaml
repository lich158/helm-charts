# Default values for fcu.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
# FCU_name image_name configmap_string cpu_mem_info
# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1


publishServer: 
  # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
  image:
    name: 192.168.1.204:30002/tiexiang/publish-server:v1.0.2
    repository: ""
    # This sets the pull policy for images.
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  
  # This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  imagePullSecrets: []

fcuServer:
  image:
    name: 192.168.1.204:30002/dapeng/fcu-image-1726212168104:v2.0
    repository: ""
    pullPolicy: Always
    tag: ""
  
  imagePullSecrets: []

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

#This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ 
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000


resources: 
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 100m
    memory: 128Mi
    "nvidia.com/gpu": 1
  requests:
    cpu: 100m
    memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
# livenessProbe: {}
#   httpGet:
#     path: /
#     port: http
# readinessProbe: {}
#   httpGet:
#     path: /
#     port: http

#This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

persistentVolumeClaim:
  data: 
    enabled: true
    storage: 10Gi
  log: 
    enabled: true
    storage: 10Gi
  # claimName: 


configMap:
  data: '{"Device":{"DeviceClass":"Radar_Videos","FCUNum":"1836303989153767425","LineCode":"xgx","Manufacturer":"dapeng","ScopeClass":"ZhaLanJie"},"Level2Seconds":{"0":12000,"1":600,"2":300,"3":180,"4":60,"5":30,"6":10},"Logger":{"Level":"INFO","LogDir":"log"},"MQTTClient":{"CertFile":"","Host":"emqx-cluster-listeners.emqx-system","Password":"tx1726667868610","Port":"1883","Username":"nnj-yonganzhen-yaz014-1836303989153767425"},"MinioClient":{"AccessKey":"minio","CertCheck":"False","Endpoint":"minio.minio-system:443","SecretKey":"minio123"},"RPCServer":{"IP":"127.0.0.1","Port":"9999"},"Scene":{"BCSUNum":"yaz014","CompanyCode":"nnj","SceneClass":"KaiKuoDi","StationCode":"yonganzhen"}}'