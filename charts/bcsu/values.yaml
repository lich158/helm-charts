# Default values for bcsu.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
# BCSU_name image_name configmap_string
# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  name: tiexiang.io/bcsu/bcsu-image:latest
  repository: ""
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

#This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ 
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000


resources: 
  # limits:
  #   cpu: 10m
  #   memory: 12Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
# livenessProbe:
#   httpGet:
#     path: /
#     port: http
# readinessProbe:
#   httpGet:
#     path: /
#     port: http

#This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

persistentVolumeClaim:
  enabled: false
  storage: 500Mi
  # claimName: 

nodeSelector: {}

# bcsu调度到中心,fcu调度到边缘
# 边缘只允许fcu调动，其他服务不允许调动到边缘
# node-role.kubernetes.io/center-node
# 边缘节点添加不可调度污点，fcu上添加该污点容忍
# node-role.kubernetes.io/edge-node
tolerations: []

affinity: {}

configMap:
  data: '{"DBClient":{"DBName":"default","DBTableName":"standard_message_nnj_yaz_yaz050","IP":"service-clickhouse-cluster.clickhouse-system","Password":"clickhouse","Port":"9000","User":"admin"},"MQTTClient":{"CertFile":"","Host":"emqx-cluster-listeners.emqx-system","MqttPublishTopic":"exception/AI","MqttSubscribeTopic":"device/nnj/yaz/yaz050","Password":"tx1729933221007","Port":"1883","Username":"nnj-yaz-yaz050"}}'