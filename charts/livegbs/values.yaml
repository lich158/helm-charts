# Default values for livegbs.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  livecms:
    repository: tiexiang.io/livegbs/livecms
    name: livecms
  livesms:
    repository: tiexiang.io/livegbs/livesms
    name: livesms
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v3.4.9"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: 
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
  privileged: true



ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: 
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 3000m
    memory: 4096Mi
  requests:
    cpu: 500m
    memory: 512Mi

service:
  type: ClusterIP
  port: 10000

livecms:
  service:
    type: NodePort
    ports:
      - name: http
        port: 30020
        protocol: TCP
      - name: http-udp
        port: 30020
        protocol: UDP
      - name: sip
        port: 30021
        protocol: TCP
      - name: sip-udp
        port: 30021
        protocol: UDP
      - name: redis
        port: 30022
        protocol: TCP
  configmap:
    http:
      port: 30020
    redis:
      port: 30022
    sip:
      port: 30021          
  readinessProbe:
    httpGet:
      path: /api/v1/getserverinfo
      port: 30020
      initialDelaySeconds: 5
      periodSeconds: 5
livesms:
  service:
    type: NodePort
    length: 30     
    ports:
      - name: http
        port: 30023
        protocol: TCP
      - name: http-udp
        port: 30023
        protocol: UDP
      - name: rtmp
        port: 30024
        protocol: TCP
      - name: rtmp-udp
        port: 30024
        protocol: UDP
      - name: sip
        port: 30025
        protocol: TCP
  configmap:
    http:
      port: 30023
    redis:
      port: 30022
    sip:
      port: 30025
    rtp:
      tcp_port_range: 30026,30056
      udp_port_range: 30026,30056
    webrtc:
      udp_port_range: 30056,30086
    record:
      dir: "/app/liveSMS/record"

someInteger1: 30     

livegbs:
  ip: 192.168.2.4
  env:
    RECORD_DIR: "/app/record"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector:
  kubernetes.io/hostname: "worker2"

tolerations: []

affinity: {}
